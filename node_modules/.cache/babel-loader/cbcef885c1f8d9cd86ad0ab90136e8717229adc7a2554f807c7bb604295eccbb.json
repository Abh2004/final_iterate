{"ast":null,"code":"var _jsxFileName = \"/home/abhi/Desktop/New Folder 1/src/App.js\",\n  _s = $RefreshSig$();\nimport { OpenAI } from 'openai';\nimport OpenAIAPI from 'openai';\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\n// require('dotenv').config() \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imgPrompt, setImgPrompt] = useState('');\n  const [imgLink, setImgLink] = useState('');\n  const [txt, setTxt] = useState('');\n  const config = {\n    apiKey: process.env.REACT_APP_APIKEY // Replace with your actual API key\n  };\n  const openai = new OpenAI({\n    apiKey: process.env.REACT_APP_APIKEY,\n    dangerouslyAllowBrowser: true\n  });\n  const generateResponse = async prompt => {\n    // Generate response from OpenAI Chat API\n    const chatResponse = await openai.chat.completions.create({\n      messages: [{\n        role: 'system',\n        content: 'You are a helpful assistant.'\n      }, {\n        role: 'user',\n        content: `relevant products matching the entered idea :\"${prompt}\"`\n      }, {\n        role: 'assistant',\n        content: 'Sure, here is the information:'\n      }],\n      model: 'gpt-3.5-turbo'\n    });\n\n    // Extract assistant's reply\n    const assistantReply = chatResponse.choices[0].message.content;\n\n    // Generate image based on the prompt\n    const imageResponse = await openai.images.generate({\n      prompt: `relevant icon image representing the category of this \"${prompt}\"`,\n      n: 1,\n      size: \"256x256\"\n    });\n    const imageUrl = imageResponse.data[0].url;\n    const textArray = assistantReply.split('\\n');\n    return {\n      text: textArray,\n      image: imageUrl\n    };\n  };\n\n  // const URL = 'https://iterate-ai-backend-hpux-pkdh130dc-abh2004.vercel.app/';\n\n  const generateData = async (prompt, type) => {\n    try {\n      console.log(prompt);\n      var response = await generateResponse(prompt);\n      console.log(response);\n      if (type === 'generate') {\n        setTxt(response.text);\n        setImgLink(response.image);\n      } else if (type === 'text') {\n        setTxt(response.data.response);\n      } else if (type === 'image') {\n        setImgLink(response.data.href);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleGenerate = () => {\n    generateData(imgPrompt, 'generate');\n  };\n  const formatText = text => {\n    // Check if text is an array, join it to create a string\n    if (Array.isArray(text)) {\n      text = text.join('\\n');\n    }\n\n    // Use regex to split the text into an array of product items\n    const productArray = text.split(/\\d+\\./).filter(item => item.trim() !== '');\n    // Map over the productArray to format each product as needed\n    return productArray.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w p-6 m-4 border border-gray-200 rounded-lg mx-24 shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-normal text-gray-700 dark:text-gray-400\",\n        children: `${index + 1}. ${product.trim()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full md:w-1/2 mx-auto flex flex-col m-4 items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full rounded-lg mx-4 bg-gray-50 flex flex-col md:flex-row items-center md:justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setImgPrompt(e.target.value),\n          className: \"bg-gray-50 text-gray-400 text-bold text-l m-2 p-4 w-full md:w-full\",\n          placeholder: \"Enter the prompt\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), txt === '' ? ' ' : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgLink,\n          className: \"h-12 m-2 rounded-xl shadow-xl\",\n          alt: \"Generated Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center m-4\",\n        onClick: handleGenerate,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:w-full mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"\",\n        children: txt === '' ? 'Generated Text will appear here  ' : formatText(txt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"V2PGWdHskiN20GQGpJDBt8QqHug=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["OpenAI","OpenAIAPI","React","useState","axios","jsxDEV","_jsxDEV","App","_s","imgPrompt","setImgPrompt","imgLink","setImgLink","txt","setTxt","config","apiKey","process","env","REACT_APP_APIKEY","openai","dangerouslyAllowBrowser","generateResponse","prompt","chatResponse","chat","completions","create","messages","role","content","model","assistantReply","choices","message","imageResponse","images","generate","n","size","imageUrl","data","url","textArray","split","text","image","generateData","type","console","log","response","href","error","handleGenerate","formatText","Array","isArray","join","productArray","filter","item","trim","map","product","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","placeholder","required","src","alt","class","onClick","_c","$RefreshReg$"],"sources":["/home/abhi/Desktop/New Folder 1/src/App.js"],"sourcesContent":["import { OpenAI } from 'openai';\nimport  OpenAIAPI  from 'openai';\nimport React, { useState } from 'react';\nimport './App.css'; \nimport axios from 'axios';\n\n// require('dotenv').config() \n\nfunction App() {\n  const [imgPrompt, setImgPrompt] = useState('');\n  const [imgLink, setImgLink] = useState('');\n  const [txt, setTxt] = useState('');\n\n\n  const config = {\n    apiKey: process.env.REACT_APP_APIKEY  // Replace with your actual API key\n  };\n\n  const openai = new OpenAI({apiKey: process.env.REACT_APP_APIKEY ,dangerouslyAllowBrowser: true });\n\n\n\n\n\n  const generateResponse = async (prompt) => {\n    // Generate response from OpenAI Chat API\n    const chatResponse = await openai.chat.completions.create({\n      messages: [\n        { role: 'system', content: 'You are a helpful assistant.' },\n        { role: 'user', content:`relevant products matching the entered idea :\"${prompt}\"`},\n        { role: 'assistant', content: 'Sure, here is the information:' },\n      ],\n      model: 'gpt-3.5-turbo',\n    });\n  \n    // Extract assistant's reply\n    const assistantReply = chatResponse.choices[0].message.content;\n  \n    // Generate image based on the prompt\n    const imageResponse = await openai.images.generate({\n      prompt: `relevant icon image representing the category of this \"${prompt}\"`,\n      n: 1,\n      size: \"256x256\",\n    });\n    const imageUrl = imageResponse.data[0].url;\n    const textArray = assistantReply.split('\\n');\n  \n    return { text: textArray, image: imageUrl };\n  };\n  \n  \n\n  // const URL = 'https://iterate-ai-backend-hpux-pkdh130dc-abh2004.vercel.app/';\n\n  const generateData = async (prompt, type) => {\n    try {\n        console.log(prompt)\n        var response= await generateResponse(prompt);\n        console.log(response)\n      if (type === 'generate') {\n        setTxt(response.text);\n        setImgLink(response.image);\n      } else if (type === 'text') {\n        setTxt(response.data.response);\n      } else if (type === 'image') {\n        setImgLink(response.data.href);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleGenerate = () => {\n    generateData(imgPrompt, 'generate');\n  };\n\n  const formatText = (text) => {\n   // Check if text is an array, join it to create a string\n   if (Array.isArray(text)) {\n     text = text.join('\\n');\n  }\n  \n  // Use regex to split the text into an array of product items\n  const productArray = text.split(/\\d+\\./).filter((item) => item.trim() !== '');\n   // Map over the productArray to format each product as needed\n  return productArray.map((product, index) => (\n    <div key={index} className=\"max-w p-6 m-4 border border-gray-200 rounded-lg mx-24 shadow-lg\">\n      <p className=\"font-normal text-gray-700 dark:text-gray-400\">{`${index + 1}. ${product.trim()}`}</p>\n       {/* Additional styling and content for each product card can be added here */}\n     </div>\n   ));\n };\n  \n\n\n  return (\n    <div className=\"App \">\n      <div className=\"relative w-full md:w-1/2 mx-auto flex flex-col m-4 items-center justify-center\">\n        <div className='w-full rounded-lg mx-4 bg-gray-50 flex flex-col md:flex-row items-center md:justify-between'>\n          <input\n            onChange={(e) => setImgPrompt(e.target.value)}\n            className=\"bg-gray-50 text-gray-400 text-bold text-l m-2 p-4 w-full md:w-full\"\n            placeholder=\"Enter the prompt\"\n            required\n          />\n          {txt === '' ? ' ' : <img src={imgLink} className=\"h-12 m-2 rounded-xl shadow-xl\" alt=\"Generated Image\" />}\n        </div>\n\n        <button\n          type=\"button\"\n          class=\"text-white bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-purple-300 dark:focus:ring-purple-800 shadow-lg shadow-purple-500/50 dark:shadow-lg dark:shadow-purple-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center m-4\"\n          onClick={handleGenerate}\n        >\n          Generate\n        </button>\n      </div>\n\n\n     <div className=\"w-full md:w-full mx-auto\">\n        <span className=\"\">{txt === '' ? 'Generated Text will appear here  ' : formatText(txt)}</span>\n      </div>  \n\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}